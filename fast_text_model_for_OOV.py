# -*- coding: utf-8 -*-
"""fast-text-train-model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E2ZHJl-NbC_6KKMV8eF817Px3KK9OwG5
"""

'''
- Dataset: amazon-fine-food-reviews + SE14-Res.
- I will use this naive model, to process words that have no emb (OOV)
'''

from gensim.models import FastText
import pandas as pd
import re
amazon_revie=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/AE/fast_text_datasets/amazon-fine-food-reviews/Reviews.csv')
amazon_revie=amazon_revie['Text'].str.lower()
amazon_revie=list(amazon_revie)

def load__data(file_path):
    myoutput,words,tags = [],[],[]
    fh = open(file_path)
    for line in fh:
        line = line.strip()
        if line=='':
            #Sentence ended.
            myoutput.append([words,tags])
            words,tags = [],[]
        else:
            word, tag = line.split("\t")
            words.append(word.lower())
            tags.append(tag)
    fh.close()
    return myoutput

test_path = '/content/drive/MyDrive/Colab Notebooks/AE/AE_Datasets/Restaurants_Test_Gold_mod.iob'
train_path = '/content/drive/MyDrive/Colab Notebooks/AE/AE_Datasets/Restaurants_Train_v2_mod.iob'
train = load__data(train_path)
test = load__data(test_path)

#lets convert them to dataframs for easier handling
df_train = pd.DataFrame(train,columns=["sentence","labels"])
df_test = pd.DataFrame(test,columns=["sentence","labels"])

#getting all the sentences and labels present in both test and train
sentences = list(df_train['sentence'])+list(df_test['sentence'])+amazon_revie

from gensim.models.callbacks import CallbackAny2Vec

class callback(CallbackAny2Vec):

    def __init__(self):
        self.epoch = 0

    def on_epoch_end(self, model):
        print(self.epoch)
        self.epoch += 1

model = FastText(size=100, window=3, min_count=1,callbacks=[callback()])
model.build_vocab(sentences)
model.train(sentences, total_examples=len(sentences), epochs=50)

fname='/content/drive/MyDrive/Colab Notebooks/AE/models/fast-text-model'
model.save(fname)
# model = FastText.load(fname)
